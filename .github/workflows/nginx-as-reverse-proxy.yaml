# Description:
# This workflow automates the process of building and pushing a Docker image
# It checks out the code, sets up the necessary environment, logs in to Docker Hub, 
# builds the image, runs the container, and verifies that the application is accessible.
# The image is tagged with the current GitHub Actions run number for unique identification.

name: setup nginx as reverse proxy 

on:
  push:
  workflow_dispatch:

env:
  OWNER_NAME: 1devops2
  REPOSITORY_NAME: how-to-configure-nginx-as-a-reverse-proxy-on-ubuntu

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          # tags: ${{ env.OWNER_NAME }}/${{ env.REPOSITORY_NAME }}:latest
          tags: ${{ env.OWNER_NAME }}/${{ env.REPOSITORY_NAME }}:${{ github.run_number }}

      - name: Run the docker container
        run: docker run -it -d -p 8080:80 ${{ env.OWNER_NAME }}/${{ env.REPOSITORY_NAME }}:${{ github.run_number }}

      - name: Wait for the container to start
        run: |
          echo "Waiting for the container to start..."
          sleep 5 

      - name: Set up nginx
        uses: nyurik/action-setup-nginx@v1
        id: nginx

      - name: Setup Reverse proxy 
        run: |
          sudo cat << 'EOF' | sudo tee /etc/nginx/sites-available/myapp
          server {
              listen 80;

              location / {
                  proxy_pass http://localhost:8080;  
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              }
          }
          EOF

          ln -s /etc/nginx/sites-available/myapp /etc/nginx/sites-enabled/myapp
          rm /etc/nginx/sites-enabled/default
          systemctl reload nginx


      - name: Verify the application is accessible
        run: |
          for i in {1..3}; do
            if curl -s --head http://localhost:80 | grep "200 OK"; then
              echo "Application is accessible."
              exit 0
            fi
            echo "Application is not accessible yet. Retrying in 5 seconds..."
            sleep 2
          done
          echo "Application is not accessible after multiple attempts."
          exit 1











